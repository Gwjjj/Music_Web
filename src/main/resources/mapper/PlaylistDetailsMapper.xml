<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.gwjjj.mapper.PlaylistDetailsMapper" >
  <resultMap id="BaseResultMap" type="cn.gwjjj.model.PlaylistDetails" >
    <id column="PLAYLIST_ID" property="playlistId" jdbcType="INTEGER" />
    <result column="PLAYLIST_NAME" property="playlistName" jdbcType="VARCHAR" />
    <result column="PLAYLIST_USERID" property="playlistUserid" jdbcType="INTEGER" />
    <result column="PLAYLIST_MUSIC" property="playlistMusic" jdbcType="VARCHAR" />
    <result column="PLAYLIST_INFO" property="playlistInfo" jdbcType="VARCHAR" />
    <result column="PLAYLIST_IMG" property="playlistImg" jdbcType="VARCHAR" />
    <result column="PLAYLIST_CRET" property="playlistCret" jdbcType="TIMESTAMP" />
    <result column="PLAYLIST_HOT" property="playlistHot" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    PLAYLIST_ID, PLAYLIST_NAME, PLAYLIST_USERID, PLAYLIST_MUSIC, PLAYLIST_INFO, PLAYLIST_IMG, 
    PLAYLIST_CRET, PLAYLIST_HOT
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.gwjjj.model.PlaylistDetailsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from playlist_details
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from playlist_details
    where PLAYLIST_ID = #{playlistId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from playlist_details
    where PLAYLIST_ID = #{playlistId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.gwjjj.model.PlaylistDetailsExample" >
    delete from playlist_details
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.gwjjj.model.PlaylistDetails" >
    insert into playlist_details (PLAYLIST_ID, PLAYLIST_NAME, PLAYLIST_USERID, 
      PLAYLIST_MUSIC, PLAYLIST_INFO, PLAYLIST_IMG, 
      PLAYLIST_CRET, PLAYLIST_HOT)
    values (#{playlistId,jdbcType=INTEGER}, #{playlistName,jdbcType=VARCHAR}, #{playlistUserid,jdbcType=INTEGER}, 
      #{playlistMusic,jdbcType=VARCHAR}, #{playlistInfo,jdbcType=VARCHAR}, #{playlistImg,jdbcType=VARCHAR}, 
      #{playlistCret,jdbcType=TIMESTAMP}, #{playlistHot,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.gwjjj.model.PlaylistDetails" >
    insert into playlist_details
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="playlistId != null" >
        PLAYLIST_ID,
      </if>
      <if test="playlistName != null" >
        PLAYLIST_NAME,
      </if>
      <if test="playlistUserid != null" >
        PLAYLIST_USERID,
      </if>
      <if test="playlistMusic != null" >
        PLAYLIST_MUSIC,
      </if>
      <if test="playlistInfo != null" >
        PLAYLIST_INFO,
      </if>
      <if test="playlistImg != null" >
        PLAYLIST_IMG,
      </if>
      <if test="playlistCret != null" >
        PLAYLIST_CRET,
      </if>
      <if test="playlistHot != null" >
        PLAYLIST_HOT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="playlistId != null" >
        #{playlistId,jdbcType=INTEGER},
      </if>
      <if test="playlistName != null" >
        #{playlistName,jdbcType=VARCHAR},
      </if>
      <if test="playlistUserid != null" >
        #{playlistUserid,jdbcType=INTEGER},
      </if>
      <if test="playlistMusic != null" >
        #{playlistMusic,jdbcType=VARCHAR},
      </if>
      <if test="playlistInfo != null" >
        #{playlistInfo,jdbcType=VARCHAR},
      </if>
      <if test="playlistImg != null" >
        #{playlistImg,jdbcType=VARCHAR},
      </if>
      <if test="playlistCret != null" >
        #{playlistCret,jdbcType=TIMESTAMP},
      </if>
      <if test="playlistHot != null" >
        #{playlistHot,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.gwjjj.model.PlaylistDetailsExample" resultType="java.lang.Integer" >
    select count(*) from playlist_details
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update playlist_details
    <set >
      <if test="record.playlistId != null" >
        PLAYLIST_ID = #{record.playlistId,jdbcType=INTEGER},
      </if>
      <if test="record.playlistName != null" >
        PLAYLIST_NAME = #{record.playlistName,jdbcType=VARCHAR},
      </if>
      <if test="record.playlistUserid != null" >
        PLAYLIST_USERID = #{record.playlistUserid,jdbcType=INTEGER},
      </if>
      <if test="record.playlistMusic != null" >
        PLAYLIST_MUSIC = #{record.playlistMusic,jdbcType=VARCHAR},
      </if>
      <if test="record.playlistInfo != null" >
        PLAYLIST_INFO = #{record.playlistInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.playlistImg != null" >
        PLAYLIST_IMG = #{record.playlistImg,jdbcType=VARCHAR},
      </if>
      <if test="record.playlistCret != null" >
        PLAYLIST_CRET = #{record.playlistCret,jdbcType=TIMESTAMP},
      </if>
      <if test="record.playlistHot != null" >
        PLAYLIST_HOT = #{record.playlistHot,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update playlist_details
    set PLAYLIST_ID = #{record.playlistId,jdbcType=INTEGER},
      PLAYLIST_NAME = #{record.playlistName,jdbcType=VARCHAR},
      PLAYLIST_USERID = #{record.playlistUserid,jdbcType=INTEGER},
      PLAYLIST_MUSIC = #{record.playlistMusic,jdbcType=VARCHAR},
      PLAYLIST_INFO = #{record.playlistInfo,jdbcType=VARCHAR},
      PLAYLIST_IMG = #{record.playlistImg,jdbcType=VARCHAR},
      PLAYLIST_CRET = #{record.playlistCret,jdbcType=TIMESTAMP},
      PLAYLIST_HOT = #{record.playlistHot,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.gwjjj.model.PlaylistDetails" >
    update playlist_details
    <set >
      <if test="playlistName != null" >
        PLAYLIST_NAME = #{playlistName,jdbcType=VARCHAR},
      </if>
      <if test="playlistUserid != null" >
        PLAYLIST_USERID = #{playlistUserid,jdbcType=INTEGER},
      </if>
      <if test="playlistMusic != null" >
        PLAYLIST_MUSIC = #{playlistMusic,jdbcType=VARCHAR},
      </if>
      <if test="playlistInfo != null" >
        PLAYLIST_INFO = #{playlistInfo,jdbcType=VARCHAR},
      </if>
      <if test="playlistImg != null" >
        PLAYLIST_IMG = #{playlistImg,jdbcType=VARCHAR},
      </if>
      <if test="playlistCret != null" >
        PLAYLIST_CRET = #{playlistCret,jdbcType=TIMESTAMP},
      </if>
      <if test="playlistHot != null" >
        PLAYLIST_HOT = #{playlistHot,jdbcType=INTEGER},
      </if>
    </set>
    where PLAYLIST_ID = #{playlistId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.gwjjj.model.PlaylistDetails" >
    update playlist_details
    set PLAYLIST_NAME = #{playlistName,jdbcType=VARCHAR},
      PLAYLIST_USERID = #{playlistUserid,jdbcType=INTEGER},
      PLAYLIST_MUSIC = #{playlistMusic,jdbcType=VARCHAR},
      PLAYLIST_INFO = #{playlistInfo,jdbcType=VARCHAR},
      PLAYLIST_IMG = #{playlistImg,jdbcType=VARCHAR},
      PLAYLIST_CRET = #{playlistCret,jdbcType=TIMESTAMP},
      PLAYLIST_HOT = #{playlistHot,jdbcType=INTEGER}
    where PLAYLIST_ID = #{playlistId,jdbcType=INTEGER}
  </update>
</mapper>